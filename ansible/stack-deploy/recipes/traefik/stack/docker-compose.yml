version: "3.8"

networks:
  cloud-public:
    external: true

services:
  traefik:
    image: traefik:v3.2
    env_file: /var/data/stack/traefik/.env
    # Note below that we use host mode to avoid source nat being applied to our ingress HTTP/HTTPS sessions
    # Without host mode, all inbound sessions would have the source IP of the swarm nodes, rather than the
    # original source IP, which would impact logging. If you don't care about this, you can expose ports the
    # "minimal" way instead
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/data/appdata/traefik/etc/traefik:/etc/traefik
      - /var/data/appdata/traefik/data:/data
      - /var/data/appdata/traefik/rules:/rules
      - /var/data/appdata/traefik/logs:/logs
      - /var/data/appdata/traefik/acme.json:/acme.json
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.swarm.network=cloud-public"

        # define traefik dashboard router and service
        - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAIN_NAME`) || Host(`$DOMAIN_NAME`)"
        - "traefik.http.routers.traefik-rtr.service=api@internal"
        - "traefik.http.routers.traefik-rtr.middlewares=middlewares-authentik@file"
        - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
        - "traefik.http.services.traefik-svc.loadbalancer.server.port=9999"

        # uncomment this to enable forward authentication on the traefik api/dashboard
        #- "traefik.http.routers.api.middlewares=forward-auth"
      placement:
        constraints: [ node.role == manager ]
    networks:
      - cloud-public