- command: "cat {{ distributed_storage_root }}/stack/authentik/secrets/authentik_bootstrap_token"
  register: authentik_bootstrap_token
  become: true

- set_fact: authentik_base_url="{{ recipes.authentik.api_base_url }}"
- set_fact: authentik_token="{{ authentik_bootstrap_token.stdout }}"

- name: "{{ recipe }} --> Test whether the Authentik API is responding"
  uri:
    url: "{{ authentik_base_url }}/core/applications/"
    method: GET
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ authentik_token }}'
    validate_certs: false
  register: _result
  until: _result.status == 200
  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
  delay: 5 # Every 5 seconds

- name: "{{ auth_recipe }} --> Outposts --> Get Default Docker Outpost from Authentik"
  uri:
    url: "{{ authentik_base_url }}/outposts/instances/?service_connection__name__iexact=Local%20Docker%20connection"
    method: GET
    status_code:
      - 200
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ authentik_token }}'
    validate_certs: false
  register: _result_outposts_get

- set_fact: docker_outpost="{{ _result_outposts_get.json.results[0] }}"

- name: "{{ auth_recipe }} --> Outposts--> Update outpost authentik host URL"
  uri:
    url: "{{ authentik_base_url }}/outposts/instances/{{ docker_outpost.pk }}/"
    method: PATCH
    body_format: json
    body: |
      {
        "config": {
          "authentik_host": "{{ recipes.authentik.domain }}"
        }
      }
    status_code:
      - 200
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ authentik_token }}'
    validate_certs: false

# Protect Traefik
- name: add protected traefik route
  include_tasks: stack-deploy/tasks/add-authentik-auth.yml
  vars:
    auth_recipe: "traefik"