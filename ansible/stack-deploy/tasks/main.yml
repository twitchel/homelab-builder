- name: ensure {{ storage.root_dir }}/stack exists
  file:
    path: "{{ storage.root_dir }}/stack"
    state: directory

- name: ensure {{ storage.root_dir }}/appdata exists
  file:
    path: "{{ storage.root_dir }}/appdata"
    state: directory

- name: run the recipe-generator
  include_tasks: generate-recipe.yml
  vars:
    requested_recipe: "{{ recipe }}"

- include_tasks: "recipes/{{ recipe }}/stack/bootstrap.yml"
  with_first_found:
    - files:
        - "recipes/{{ recipe }}/stack/bootstrap.yml"
      skip: true

- name: "{{ recipe }} --> remove recipe stack"
  docker_stack:
    state: absent
    name: "{{ recipe }}"
    compose: "{{ storage.root_dir }}/stack/{{ recipe }}/docker-compose.yml"
    with_registry_auth: yes
  when: services[recipe].enabled == false
  register: _result
  until: _result.failed == false
  retries: 20 # retry X times
  delay: 30     # pause for X sec b/w each call

- name: Deploy stack if enabled
  when: services[recipe].enabled == true
  block:
  - name: "{{ recipe }} --> deploy recipe stack"
    docker_stack:
      state: present
      name: "{{ recipe }}"
      compose: "{{ storage.root_dir }}/stack/{{ recipe }}/docker-compose.yml"
      with_registry_auth: yes
    register: _result
    until: _result.failed == false
    retries: 20 # retry X times
    delay: 30     # pause for X sec b/w each call

  - name: "{{ recipe }} --> Test whether the stack is running as desired"
    shell: "docker stack ps {{ recipe }} --filter \"desired-state=running\"  --format \"{{'{{'}} .CurrentState {{'}}'}}\" | grep -v Running"
    register: _result
    until: _result.rc == 1
    failed_when: _result.rc != 1
    retries: 120 # retry X times
    delay: 5   # pause for X sec b/w each call

  - include_tasks: "recipes/{{ recipe }}/stack/post-deploy.yml"
    with_first_found:
      - files:
          - "recipes/{{ recipe }}/stack/post-deploy.yml"
        skip: true