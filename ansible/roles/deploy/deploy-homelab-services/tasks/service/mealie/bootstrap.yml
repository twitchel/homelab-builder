---
- name: "Ensure mealie directories exist"
  block:
  - name: Ensure appdata/mealie/postgresql exists
    ansible.builtin.file:
      path: "{{ storage.root_dir }}/appdata/mealie/postgresql"
      state: directory
      mode: "0775"
      owner: "{{ storage.owner }}"
      group: "{{ storage.group }}"
      recurse: true

  - name: Ensure appdata/mealie/app-data exists
    ansible.builtin.file:
      path: "{{ storage.root_dir }}/appdata/mealie/app-data"
      state: directory
      mode: "0775"
      owner: "{{ storage.owner }}"
      group: "{{ storage.group }}"
      recurse: true

  - name: Ensure appdata/mealie/app-nltk-data exists
    ansible.builtin.file:
      path: "{{ storage.root_dir }}/appdata/mealie/app-nltk-data"
      state: directory
      mode: "0775"
      owner: "{{ storage.owner }}"
      group: "{{ storage.group }}"
      recurse: true

- name: Write env secrets
  block:
  - name: POSTGRES_PASSWORD secret
    block:
    - name: Generate mealie postgres password
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: set -o pipefail && openssl rand -hex 16 | tr -d '\n' > {{ storage.root_dir }}/stack/mealie/secrets/postgres_password
      args:
        creates: "{{ storage.root_dir }}/stack/mealie/secrets/postgres_password"
      no_log: true

    - name: Register postgresql password for usage
      ansible.builtin.command: cat {{ storage.root_dir }}/stack/mealie/secrets/postgres_password
      register: mealie_postgres_password
      become: true
      changed_when: true
      no_log: true

    - name: Set POSTGRES_PASSWORD env
      ansible.builtin.lineinfile:
        path: "{{ storage.root_dir }}/stack/mealie/.env"
        regexp: "^POSTGRES_PASSWORD="
        line: "POSTGRES_PASSWORD={{ mealie_postgres_password.stdout }}"
      no_log: true
    # - name: Set POSTGRES_URL_OVERRIDE env
    #   ansible.builtin.lineinfile:
    #     path: "{{ storage.root_dir }}/stack/mealie/.env"
    #     regexp: "^POSTGRES_URL_OVERRIDE="
    #     line: "POSTGRES_URL_OVERRIDE=postgresql://mealie:{{ mealie_postgres_password.stdout }}@postgres:5432/mealie"
    #   no_log: true

    #    - name: NEXTAUTH_URL secret
    #      block:
    #        - name: Set NEXTAUTH_URL env
    #          ansible.builtin.lineinfile:
    #            path: "{{ storage.root_dir }}/stack/mealie/.env"
    #            regexp: "^NEXTAUTH_URL="
    #            line: "NEXTAUTH_URL="
    #          no_log: true

  - name: NEXTAUTH_SECRET secret
    block:
    - name: Generate NEXTAUTH_SECRET
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: set -o pipefail && openssl rand -hex 16 | tr -d '\n' > {{ storage.root_dir }}/stack/mealie/secrets/NEXTAUTH_SECRET
      args:
        creates: "{{ storage.root_dir }}/stack/mealie/secrets/NEXTAUTH_SECRET"
      no_log: true

    - name: Register postgresql password for usage
      ansible.builtin.command: cat {{ storage.root_dir }}/stack/mealie/secrets/NEXTAUTH_SECRET
      register: mealie_NEXTAUTH_SECRET
      become: true
      changed_when: true
      no_log: true

    - name: Set NEXTAUTH_SECRET env
      ansible.builtin.lineinfile:
        path: "{{ storage.root_dir }}/stack/mealie/.env"
        regexp: "^NEXTAUTH_SECRET="
        line: "NEXTAUTH_SECRET={{ mealie_NEXTAUTH_SECRET.stdout }}"
      no_log: true
