- name: Write oauth secrets secrets
  block:
    - name: Setup client_id secret
      block:
        - name: Register client_id for usage
          ansible.builtin.command: cat {{ storage.root_dir }}/stack/mealie/secrets/client_id
          register: mealie_client_id
          become: true
          changed_when: true
          no_log: true

        - name: Set client_id env
          ansible.builtin.lineinfile:
            path: "{{ storage.root_dir }}/stack/mealie/.env"
            regexp: "^OIDC_CLIENT_ID="
            line: "OIDC_CLIENT_ID={{ mealie_client_id.stdout }}"
          no_log: true
    - name: Setup client_secret secret
      block:
        - name: Register client_secret for usage
          ansible.builtin.command: cat {{ storage.root_dir }}/stack/mealie/secrets/client_secret
          register: mealie_client_secret
          become: true
          changed_when: true
          no_log: true

        - name: Set client_secret env
          ansible.builtin.lineinfile:
            path: "{{ storage.root_dir }}/stack/mealie/.env"
            regexp: "^OIDC_CLIENT_SECRET="
            line: "OIDC_CLIENT_SECRET={{ mealie_client_secret.stdout }}"
          no_log: true

- name: Setup and link mealie groups
  block:
    - name: Create groups in authentik
      ansible.builtin.include_role:
        name: deploy/authentik/add-group # noqa role-name[path]
      with_items:
        - "{{ service_config.env.OIDC_ADMIN_GROUP }}"
        - "{{ service_config.env.OIDC_USER_GROUP }}"

- name: Restart mealie
  ansible.builtin.include_role:
    name: deploy/start-service # noqa role-name[path]
  vars:
    service_name: "mealie"
    service_enabled: "{{ services[\"mealie\"].enabled }}"
    service_reboot: false
