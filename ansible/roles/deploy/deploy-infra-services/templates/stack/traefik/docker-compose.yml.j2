version: "3.8"

networks:
  cloud-public:
    external: true
services:
  traefik:
    image: "traefik:{{ infrastructure_services.traefik.version }}"
    env_file: "{{ storage.root_dir }}/stack/traefik/.env"
    ports:
      # We expose the standard 80 and 443 ports via bridged mode so that local DNS can be setup (can connect to the
      # stack on your local network if configured in your DNS server without reaching out via the internet and tunnels).
      # This can cause problems with source IP's to be reported incorrectly, if so you can add the `mode: host`
      # attribute to both the 80 and 443 ports.
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      # Traefik dashboard port exposed separately so it can be inspected from the local network
      - target: 8080
        published: 8080
        protocol: tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{ storage.root_dir }}/appdata/traefik/etc/traefik:/etc/traefik
      - {{ storage.root_dir }}/appdata/traefik/data:/data
      - {{ storage.root_dir }}/appdata/traefik/rules:/rules
      - {{ storage.root_dir }}/appdata/traefik/logs:/logs
      - {{ storage.root_dir }}/appdata/traefik/acme.json:/acme.json
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.swarm.network=cloud-public"

        # define traefik dashboard router and service
{% if infrastructure_services.traefik.public %}
        - "traefik.http.routers.traefik-rtr.rule=Host(`{{ infrastructure_services.traefik.domain }}`)"
{% else %}
        # Private service, only accessible via VPN with DNS configured
        - "traefik.http.routers.traefik-rtr.rule=Host(`{{ infrastructure_services.traefik.domain }}`) && {{ private_service_rule }}"
{% endif %}
        - "traefik.http.routers.traefik-rtr.service=api@internal"
{% if infrastructure_services.traefik.auth_enabled %}
        - "traefik.http.routers.traefik-rtr.middlewares=middlewares-authentik@file"
{% endif %}
        - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
        - "traefik.http.services.traefik-svc.loadbalancer.server.port=9999"
      placement:
        constraints: [ node.role == manager ]
    networks:
      - cloud-public