---
- name: "Ensure storage root_dir exists"
  ansible.builtin.file:
    path: "{{ storage.root_dir }}"
    state: directory
    mode: "0600"

- name: Ensure /etc/ceph exists
  ansible.builtin.file:
    path: /etc/ceph
    state: directory
    mode: "0600"

- name: Install microceph
  snap:
    name: microceph

- name: Install ceph tools
  ansible.builtin.apt:
    update_cache: true
    name: "{{ packages }}"
  vars:
    packages:
      - ceph-common
      - nfs-common
  register: _result
  until: _result.failed == false
  retries: 30 # retry X times
  delay: 5 # pause for X sec b/w each call

- name: Have we already been bootstrapped?
  ansible.builtin.stat:
    path: /etc/ceph/ceph.conf
  register: _ceph_configured

- name: Configure Ceph on first host
  run_once: true
  delegate_to: "{{ play_hosts[0] }}"
  when: not _ceph_configured.stat.exists
  block:

    - name: Bootstrap ceph cluster on first host # noqa no-changed-when
      ansible.builtin.command: "microceph cluster bootstrap"

    - name: Update CRUSH rules for single instance cluster # noqa no-changed-when
      ansible.builtin.command: "microceph.ceph osd crush rule rm replicated_rule"
      when: (play_hosts | length) == 1

    - name: Update CRUSH rules for single instance cluster # noqa no-changed-when
      ansible.builtin.command: "microceph.ceph osd crush rule create-replicated single default osd"
      when: (play_hosts | length) == 1

    - name: Prepare disk SDB for microceph # noqa no-changed-when
      ansible.builtin.command: "microceph disk add /dev/sdb --wipe"

    - name: Create metadata OSD pool # noqa no-changed-when
      ansible.builtin.command: "microceph.ceph osd pool create cephfs_meta"

    - name: Create data OSD pool # noqa no-changed-when
      ansible.builtin.command: "microceph.ceph osd pool create cephfs_data"

    - name: Create ceph filesystem # noqa no-changed-when
      ansible.builtin.command: "microceph.ceph fs new data cephfs_meta cephfs_data"

    - name: Create symlink for ceph.keyring # noqa no-changed-when
      ansible.builtin.command: "ln -s /var/snap/microceph/current/conf/ceph.keyring /etc/ceph/ceph.keyring"

    - name: Create symlink for ceph.conf # noqa no-changed-when
      ansible.builtin.command: "ln -s /var/snap/microceph/current/conf/ceph.conf /etc/ceph/ceph.conf"

- name: Join the cluster from the other nodes
  when: inventory_hostname != play_hosts[0]
  block:
    - name: Have we already been bootstrapped?
      ansible.builtin.stat:
        path: /etc/ceph/ceph.conf
      register: _ceph_configured

    - name: Generate join token for {{ inventory_hostname }}
      delegate_to: "{{ play_hosts[0] }}"
      ansible.builtin.command: "microceph cluster add {{ inventory_hostname }}"
      when: not _ceph_configured.stat.exists
      register: _join_token
      changed_when: true

    - name: Join cluster from {{ inventory_hostname }}
      ansible.builtin.command: "microceph cluster join {{ _join_token.stdout }}"
      when: not _ceph_configured.stat.exists
      changed_when: true

    - name: Prepare disk SDB for microceph
      ansible.builtin.command: "microceph disk add /dev/sdb --wipe"
      when: not _ceph_configured.stat.exists
      changed_when: true

    - name: Create symlink for ceph.keyring
      ansible.builtin.command: "ln -s /var/snap/microceph/current/conf/ceph.keyring /etc/ceph/ceph.keyring"
      when: not _ceph_configured.stat.exists
      changed_when: true

    - name: Create symlink for ceph.conf
      ansible.builtin.command: "ln -s /var/snap/microceph/current/conf/ceph.conf /etc/ceph/ceph.conf"
      when: not _ceph_configured.stat.exists
      changed_when: true

- name: Expand the cluster to the other hosts and setup file system
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  block:
    - name: Do we have an mds up yet? (try for 20 min)
      ansible.builtin.shell: set -o pipefail && false | (ceph -s | grep mds)
      register: _result
      until: _result.failed == false
      retries: 120 # retry X times
      delay: 10 # pause for X sec b/w each call
      changed_when: true

    - name: Do we have HEALTH_OK yet? (try for 20 min)
      ansible.builtin.shell: set -o pipefail && false | (ceph -s | grep HEALTH_OK)
      register: _result
      until: _result.failed == false
      retries: 120 # retry X times
      delay: 10 # pause for X sec b/w each call\
      changed_when: true

- name: Concatenate the names of all the hosts for the next 2 steps
  ansible.builtin.set_fact:
    _ceph_mons: "{{ play_hosts | join(',') }}"

- name: Add cephfs mount to /etc/fstab, and mount it
  mount:
    src: "{{ _ceph_mons }}:/"
    path: "{{ storage.root_dir }}"
    state: mounted
    fstype: ceph
    opts: name=admin,fs=data
  register: _result
  until: _result.failed == false
  retries: 60 # retry X times
  delay: 5 # pause for X sec b/w each call
