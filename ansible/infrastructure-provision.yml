---
- name: Provision storage nodes
  hosts: storage_nodes
  gather_facts: true
  remote_user: "{{ storage_node.username }}"
  become: true

  tasks:
    # - name: Ensure user exists with correct uid, and associate to correct group
    #   ansible.builtin.user:
    #     name: "{{ storage.ownerName }}"
    #     comment: "{{ storage.ownerName }}"
    #     uid: "{{ storage.owner }}"
    #     group: "ubuntu"

    - name: Add the hosts in the group to /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ item }}$"
        line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
        state: present
      with_items:
        - "{{ play_hosts }}"

    - name: Prevent cloud-init from overwriting /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/cloud/cloud.cfg
        regex: "update_etc_hosts"
        state: absent

    - name: Provision storage nodes
      ansible.builtin.include_role:
        name: provision/provision-storage-node # noqa role-name[path]

- name: Provision compute nodes
  hosts: compute_nodes
  gather_facts: true
  remote_user: "{{ compute_node.username }}"
  become: true

  tasks:
    # - name: Ensure user exists with correct uid, and associate to correct group
    #   ansible.builtin.user:
    #     name: "{{ storage.ownerName }}"
    #     comment: "{{ storage.ownerName }}"
    #     uid: "{{ storage.owner }}"
    #     group: "ubuntu"

    - name: Add the hosts in the group to /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ item }}$"
        line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
        state: present
      with_items:
        - "{{ play_hosts }}"

    - name: Prevent cloud-init from overwriting /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/cloud/cloud.cfg
        regex: "update_etc_hosts"
        state: absent

    - name: Docker Provision
      ansible.builtin.include_role:
        name: provision/provision-docker # noqa role-name[path]
      when: runtime.type == 'docker'

    - name: Kubernetes Provision
      ansible.builtin.include_role:
        name: provision/provision-kubernetes # noqa role-name[path]
      when: runtime.type == 'kubernetes'
